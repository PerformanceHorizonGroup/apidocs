# Group Campaign Reward

Campaign reward is a points based incentive scheme. Each reward is bound to a campaign. Every conversion it that campaign will be matched against rewardâ€™s settings. Eventually it will be assigned to a conversion.

## Campaign Reward [/campaign/{campaign_id}/reward{?inactive}]
All requests in scope of Campaign rewards needs parameter `'campaign_id'` with proper value i.e. `'1111l123'`.
+ Parameters
    + campaign_id: `1111l123` (required, string)
    + inactive: `true` (boolean, optional) - Include deleted rewards in response

### List all Campaign Rewards [GET]

To get list of all Campaign rewards, you need to send simple GET request using base url without any changes.

+ Response 200 (application/json; charset=utf-8)
    + Attributes
        + rewards (array[Reward])
            
+ Response 404 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Campaign not found for id 1111l123` (string)

### Create a Campaign Reward [POST]


+ Request (application/json; charset=utf-8)
    + Attributes (Unsaved Reward)

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Reward)
            
+ Response 400 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `You must complete this field` (string)
            + type: `Validation Fail`
            + fields: [] (array)
                        
+ Response 400 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Invalid numerical value` (string)
            + type: `Validation Fail`
            + fields: [] (array)
                        
+ Response 400 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Invalid boolean` (string)
            + type: `Validation Fail`
            + fields: [] (array)
                        
+ Response 400 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Invalid country code` (string)
            + type: `Validation Fail`
            + fields: [] (array)
                        
+ Response 400 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Invalid date format` (string)
            + type: `Validation Fail`
            + fields: [] (array)
                        
+ Response 400 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Establishment code must have more than one character` (string)
            + type: `Validation Fail`
            + fields: [] (array)
                        
+ Response 400 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Establishment code must be 40 characters or less` (string)
            + type: `Validation Fail`
            + fields: [] (array)
                        
+ Response 400 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Establishment code must not contain symbols or spaces` (string)
            + type: `Validation Fail`
            + fields: [] (array)
                        
+ Response 400 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Invalid numerical value, must be greater than '0'` (string)
            + type: `Validation Fail`
            + fields: [] (array)
                                    
+ Response 400 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Name must have more than one character` (string)
            + type: `Validation Fail`
            + fields: [] (array)
                                    
+ Response 400 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Name must be 40 characters or less` (string)
            + type: `Validation Fail`
            + fields: [] (array)
                                    
+ Response 400 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Name must not contain symbols or spaces` (string)
            + type: `Validation Fail`
            + fields: [] (array)
                                    
+ Response 400 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Invalid value` (string)
            + type: `Validation Fail`
            + fields: [] (array)
                                    
+ Response 400 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Expected string` (string)
            + type: `Validation Fail`
            + fields: [] (array)
                                                
+ Response 400 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `XYZ is missing and is a required field` (string)
            + type: `Validation Fail`
            + fields: [] (array)
            
+ Response 404 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Campaign not found for id 1111l123` (string)

### Delete a Campaign Reward [DELETE /campaign/{campaign_id}/reward/{reward_id}]

To delete a specific campaign reward, you just need to send DELETE request using base URL with additional parameter: 
1. `'reward_id' => '1511l321'`
specified in url.

+ Parameters
    + campaign_id: `1111l123` (required, string)
    + reward_id: `1511l321` (string, required)
    
+ Response 200 (application/json; charset=utf-8)
    + Attributes 
        + reward_id: `1111l123` (string)
        + status: `deleted` (string)
            
+ Response 404 (application/json; charset=utf-8)
    + Attributes
        + error
            + message: `Reward '1511l321' not found for campaign '1111l123'` (string)